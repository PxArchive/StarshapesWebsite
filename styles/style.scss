// imports these scss files IN ORDER before compiling to CSS
// the _ in the filename makes it compile to style.css instead of individual css files

@import "./resets";
@import "./variables";
@import "./fonts";
@import "./nav";



body {
    background: $g-background; // use the gradient variable as background
    &::before {
        content: ''; // create an invisible clone of the same object
        z-index: -1; // place it behind the content inside 'body'
        display: grid;
        position: fixed;
        width: 100%;
        height: 100%;
        background-image: url(../assets/img/image_054_0000_t.png);
        opacity: 1;
        background-size: 400px;
        background-repeat: repeat;
        background-blend-mode: multiply;
    }
}

.content-grid {

// very important grid setup that the layout relies on
    --padding-bar: 0.5rem; // sets the page padding base value
    --content-max-width: 960px ; // sets the maximum width of the main content
    --breakout-width: minmax(0px, 3rem); // how far the breakout element break out

    display: grid;
    grid-template-columns: 
    [fullwidth-start] // label to call all 5 columns "fullwidth"
    minmax(var(--padding-bar), 1fr) // dynamically scale the page padding between the minimum padding, and infinity, to keep the content centered

    [breakout-start] // label to call the inner 3 columns "breakout"
    var(--breakout-width) 

    [content-start] // label to call the central column "content"
    min(100% - (var(--padding-bar) * 4), var(--content-max-width)) // removes the breakout padding dynamically on small screen sizes, while keeping the main content column to a maximum width
    [content-end] 

    var(--breakout-width) 
    [breakout-end] 

    minmax(var(--padding-bar), 1fr) 
    [fullwidth-end];
    /* start and end suffix/prefix creates the grid-areas that content is assigned to */
}

.content-grid > * {
    grid-column: content; // assign all direct children of the grid to fill only the "content" central column
}

.content-grid > .breakout {
    grid-column: breakout; // assign the breakout class to the breakout area, becoming slightly wider than the content
}

.content-grid > .fullwidth {
    grid-column: fullwidth; // assign the fullwidth class to all 5 columns, fulling the entire width of the screen
}
